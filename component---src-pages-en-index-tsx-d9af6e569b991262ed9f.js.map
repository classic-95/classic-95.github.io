{"version":3,"file":"component---src-pages-en-index-tsx-d9af6e569b991262ed9f.js","mappings":"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","sources":["webpack://Classic95/./src/components/body/HomePostItem.tsx","webpack://Classic95/./src/components/body/HomeBody.tsx","webpack://Classic95/./src/components/common/SEO.tsx","webpack://Classic95/./src/libs/formatter.ts","webpack://Classic95/./src/pages/en/index.tsx"],"sourcesContent":["import React, { useMemo } from \"react\";\nimport { Link } from \"gatsby\";\nimport { GatsbyImage, getImage } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport dateFormatter from \"../../libs/formatter\";\nimport media from \"../../libs/styles/media\";\nimport palette from \"../../libs/styles/palette\";\n\nconst Container = styled.div`\n\twidth: 100%;\n\tdisplay: flex;\n\talign-items: center;\n\tjustify-content: space-between;\n\tpadding: 28px 0;\n\tborder-bottom: 1px solid ${palette.gray[3]};\n\n\t.thumbnail {\n\t\twidth: 180px;\n\n\t\t${media.custom(767)} {\n\t\t\twidth: 100px;\n\t\t}\n\t}\n\n\ttime {\n\t\tdisplay: block;\n\t\tmargin-bottom: 16px;\n\t\tfont-size: 0.875em;\n\t\tline-height: 1.375rem;\n\t\tcolor: #666;\n\n\t\t${media.custom(1023)} {\n\t\t\tfont-size: 0.75em;\n\t\t\tmargin-bottom: 9px;\n\t\t}\n\t}\n\n\t&:hover {\n\t\th4 {\n\t\t\tcolor: ${palette.viloet[6]};\n\t\t\ttransition: color 0.2s;\n\t\t}\n\t\tspan {\n\t\t\tcolor: black;\n\t\t\ttransition: color 0.2s;\n\t\t}\n\t\t.more {\n\t\t\tcolor: ${palette.viloet[6]};\n\t\t\ttransition: color 0.2s;\n\t\t}\n\t}\n`;\n\nconst LabelContainer = styled.div`\n\tflex: 1;\n\tmargin-right: 78px;\n\n\t${media.custom(767)} {\n\t\tmargin-right: 60px;\n\t}\n`;\n\nconst TitleLabel = styled.h4`\n\tfont-size: 1.125em;\n\tmargin-bottom: 10px;\n\toverflow: hidden;\n\twhite-space: normal;\n\ttext-overflow: ellipsis;\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: 1;\n\t-webkit-box-orient: vertical;\n\tword-break: keep-all;\n\n\t${media.custom(1023)} {\n\t\tfont-size: 1em;\n\t\tmargin-bottom: 2px;\n\t}\n`;\n\nconst Label = styled.span`\n\tfont-size: 0.875em;\n\tline-height: 1.375rem;\n\tcolor: #666;\n\toverflow: hidden;\n\twhite-space: normal;\n\ttext-overflow: ellipsis;\n\tdisplay: -webkit-box;\n\t-webkit-line-clamp: 4;\n\t-webkit-box-orient: vertical;\n\tword-break: keep-all;\n\n\t${media.custom(1023)} {\n\t\tfont-size: 0.75em;\n\t}\n\n\t${media.custom(767)} {\n\t\t-webkit-line-clamp: 2;\n\t}\n`;\n\nconst MoreLabel = styled.span`\n\tfont-size: 0.75em;\n\tcolor: ${palette.viloet[2]};\n`;\n\ninterface Props {\n\tslug: string;\n\tpost: {\n\t\tcreated_at: string;\n\t\tdescription: string;\n\t\ttitle: string;\n\t\tthumbnail: any;\n\t};\n}\n\nexport default function HomePostItem({ slug, post }: Props) {\n\tconst image = useMemo(\n\t\t() => (post.thumbnail ? getImage(post.thumbnail) : null),\n\t\t[post.thumbnail],\n\t);\n\n\treturn (\n\t\t<Link to={slug}>\n\t\t\t<Container>\n\t\t\t\t<LabelContainer>\n\t\t\t\t\t<TitleLabel>{post.title}</TitleLabel>\n\t\t\t\t\t<Label>{post.description}</Label>\n\t\t\t\t\t<time dateTime={post.created_at}>{dateFormatter(post.created_at)}</time>\n\t\t\t\t\t<MoreLabel className=\"more\">{\"더보기 >\"}</MoreLabel>\n\t\t\t\t</LabelContainer>\n\t\t\t\t{image && <GatsbyImage className=\"thumbnail\" image={image} alt=\"post thumbnail\" />}\n\t\t\t</Container>\n\t\t</Link>\n\t);\n}\n","import React, { useMemo } from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\nimport { IGatsbyImageData } from \"gatsby-plugin-image\";\nimport styled from \"styled-components\";\nimport media from \"../../libs/styles/media\";\nimport { LanguageType } from \"../../types/Common\";\nimport HomePostItem from \"./HomePostItem\";\n\nconst Container = styled.div`\n\twidth: 100%;\n`;\n\nconst InnerContainer = styled.div`\n\tmax-width: 860px;\n\tmargin: auto;\n\tpadding-top: 75px;\n\n\t${media.custom(1199)} {\n\t\tmax-width: 928px;\n\t\tpadding: 75px 34px 0;\n\t}\n\n\t${media.custom(1023)} {\n\t\tmax-width: 928px;\n\t\tpadding-top: 50px;\n\t}\n`;\n\ninterface Props {\n\tlang: LanguageType;\n}\n\ntype QueryType = {\n\tallMdx: {\n\t\tnodes: {\n\t\t\tfields: {\n\t\t\t\tslug: string;\n\t\t\t};\n\t\t\tfrontmatter: {\n\t\t\t\tcreated_at: string;\n\t\t\t\tdescription: string;\n\t\t\t\tthumbnail: {\n\t\t\t\t\tchildImageSharp: {\n\t\t\t\t\t\tgatsbyImageData: IGatsbyImageData;\n\t\t\t\t\t};\n\t\t\t\t};\n\t\t\t\ttitle: string;\n\t\t\t};\n\t\t}[];\n\t} | null;\n};\n\nexport default function HomeBody({ lang }: Props) {\n\tconst data = useStaticQuery<QueryType>(graphql`\n\t\tquery AllMdx {\n\t\t\tallMdx(\n\t\t\t\tfilter: { frontmatter: { is_private: { eq: false } } }\n\t\t\t\tsort: { frontmatter: { created_at: DESC } }\n\t\t\t\tlimit: 100\n\t\t\t) {\n\t\t\t\tnodes {\n\t\t\t\t\tfields {\n\t\t\t\t\t\tslug\n\t\t\t\t\t}\n\t\t\t\t\tfrontmatter {\n\t\t\t\t\t\tcreated_at\n\t\t\t\t\t\tdescription\n\t\t\t\t\t\tthumbnail {\n\t\t\t\t\t\t\tchildImageSharp {\n\t\t\t\t\t\t\t\tgatsbyImageData(width: 180, quality: 100)\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t\ttitle\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\tconst nodes = useMemo(\n\t\t() =>\n\t\t\tdata.allMdx\n\t\t\t\t? data.allMdx.nodes.filter((node) =>\n\t\t\t\t\t\tnode.fields.slug.includes(\"/en/\") ? lang === \"en\" : lang === \"ko\",\n\t\t\t\t  )\n\t\t\t\t: [],\n\t\t[data.allMdx, lang],\n\t);\n\n\treturn (\n\t\t<Container>\n\t\t\t<InnerContainer>\n\t\t\t\t{nodes.map((node) => (\n\t\t\t\t\t<HomePostItem\n\t\t\t\t\t\tkey={node.fields.slug}\n\t\t\t\t\t\tslug={node.fields.slug}\n\t\t\t\t\t\tpost={node.frontmatter}\n\t\t\t\t\t/>\n\t\t\t\t))}\n\t\t\t</InnerContainer>\n\t\t</Container>\n\t);\n}\n","import React from \"react\";\nimport { graphql, useStaticQuery } from \"gatsby\";\n\ninterface Props {\n\ttitle?: string;\n\tdescription?: string;\n\tpathname?: string;\n\tcreated_at?: string;\n\tupdated_at?: string;\n\timage?: string;\n\tchildren?: any;\n}\n\ntype QueryType = {\n\tsite: {\n\t\tsiteMetadata: {\n\t\t\tauthor: string;\n\t\t\tdescription: string;\n\t\t\tsiteUrl: string;\n\t\t\ttitle: string;\n\t\t};\n\t};\n\tfile: {\n\t\tchildImageSharp: {\n\t\t\tfixed: { src: string };\n\t\t};\n\t};\n};\n\nconst SEO = ({ title, description, pathname, created_at, updated_at, image, children }: Props) => {\n\tconst { site, file } = useStaticQuery<QueryType>(graphql`\n\t\t{\n\t\t\tsite {\n\t\t\t\tsiteMetadata {\n\t\t\t\t\tauthor\n\t\t\t\t\tdescription\n\t\t\t\t\tsiteUrl\n\t\t\t\t\ttitle\n\t\t\t\t}\n\t\t\t}\n\t\t\tfile(relativePath: { eq: \"preview.png\" }) {\n\t\t\t\tchildImageSharp {\n\t\t\t\t\tfixed(quality: 100) {\n\t\t\t\t\t\tsrc\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}\n\t\t}\n\t`);\n\n\tconst seo = {\n\t\tauthor: site.siteMetadata.author,\n\t\ttitle: title ? `${title} | ${site.siteMetadata.title}` : site.siteMetadata.title,\n\t\tdescription: description || site.siteMetadata.description,\n\t\timage: `${site.siteMetadata.siteUrl}${image || file.childImageSharp.fixed.src}`,\n\t\turl: `${site.siteMetadata.siteUrl}${pathname || \"\"}`,\n\t};\n\n\treturn (\n\t\t<>\n\t\t\t<title>{seo.title}</title>\n\t\t\t<meta name=\"description\" content={seo.description} />\n\t\t\t<meta name=\"twitter:url\" content={seo.url} />\n\t\t\t<meta name=\"twitter:title\" content={seo.title} />\n\t\t\t<meta name=\"twitter:url\" content={seo.url} />\n\t\t\t<meta name=\"twitter:description\" content={seo.description} />\n\t\t\t<meta name=\"twitter:card\" content=\"summary\" />\n\t\t\t<meta property=\"twitter:image\" content={seo.image} />\n\t\t\t<meta property=\"og:type\" content=\"website\" />\n\t\t\t<meta property=\"og:title\" content={seo.title} />\n\t\t\t<meta property=\"og:description\" content={seo.description} />\n\t\t\t<meta property=\"og:site_name\" content={seo.title} />\n\t\t\t<meta property=\"og:image\" content={seo.image} />\n\t\t\t<meta name=\"robots\" content=\"index,follow\" />\n\t\t\t<link rel=\"apple-touch-icon\" href=\"/favicon.ico\" />\n\t\t\t{created_at !== undefined && (\n\t\t\t\t<script type=\"application/ld+json\">\n\t\t\t\t\t{JSON.stringify({\n\t\t\t\t\t\t\"@context\": \"http://schema.org\",\n\t\t\t\t\t\t\"@type\": \"BlogPosting\",\n\t\t\t\t\t\tauthor: {\n\t\t\t\t\t\t\t\"@type\": \"Person\",\n\t\t\t\t\t\t\tname: seo.author,\n\t\t\t\t\t\t\tlogo: null,\n\t\t\t\t\t\t},\n\t\t\t\t\t\turl: seo.url,\n\t\t\t\t\t\theadline: seo.title,\n\t\t\t\t\t\tdescription: seo.description,\n\t\t\t\t\t\tdatePublished: created_at,\n\t\t\t\t\t\tdateModified: updated_at || created_at,\n\t\t\t\t\t\timage: seo.image,\n\t\t\t\t\t})}\n\t\t\t\t</script>\n\t\t\t)}\n\t\t\t{/* \n\t\t\t<meta name=\"twitter:image\" content={seo.image} />\n\t\t\t */}\n\t\t\t<meta\n\t\t\t\tname=\"google-site-verification\"\n\t\t\t\tcontent=\"2NEjQXuPpAZn1qBwWaCQCW049bja-eAPjfpGZg-aTF4\"\n\t\t\t/>\n\t\t\t<script\n\t\t\t\tasync\n\t\t\t\tsrc=\"https://pagead2.googlesyndication.com/pagead/js/adsbygoogle.js?client=ca-pub-3926462216067158\"\n\t\t\t\tcrossOrigin=\"anonymous\"\n\t\t\t/>\n\t\t\t<meta\n\t\t\t\tname=\"naver-site-verification\"\n\t\t\t\tcontent=\"c9c69a7d089e0de9420276fed17efd10e80d8dce\"\n\t\t\t/>\n\t\t\t{children}\n\t\t</>\n\t);\n};\n\nexport default SEO;\n","const getFormatNumber = (num: number) => (num < 10 ? `0${num}` : num);\n\nconst dateFormatter = (rawDate: string) => {\n\tconst raw = new Date(rawDate);\n\n\tconst year = raw.getUTCFullYear() % 100;\n\tconst month = raw.getMonth() + 1;\n\tconst date = raw.getDate();\n\tconst hour = raw.getHours();\n\tconst minute = raw.getMinutes();\n\n\tconst fullDate = `${getFormatNumber(year)}.${getFormatNumber(month)}.${getFormatNumber(\n\t\tdate,\n\t)} ${getFormatNumber(hour)}:${getFormatNumber(minute)}`;\n\n\treturn fullDate;\n};\n\nexport default dateFormatter;\n","import React from \"react\";\nimport HomeBody from \"../../components/body/HomeBody\";\nimport SEO from \"../../components/common/SEO\";\n\nexport default function HomePage() {\n\treturn <HomeBody lang=\"en\" />;\n}\n\nexport const Head = () => <SEO title=\"Home\" />;\n"],"names":["Container","styled","div","withConfig","displayName","componentId","palette","gray","media","custom","viloet","LabelContainer","TitleLabel","h4","Label","span","MoreLabel","HomePostItem","_ref","slug","post","image","useMemo","thumbnail","getImage","React","Link","to","title","description","dateTime","created_at","dateFormatter","className","GatsbyImage","alt","InnerContainer","HomeBody","lang","data","useStaticQuery","nodes","allMdx","filter","node","fields","includes","map","key","frontmatter","pathname","updated_at","children","site","file","seo","author","siteMetadata","siteUrl","childImageSharp","fixed","src","url","name","content","property","rel","href","undefined","type","JSON","stringify","logo","headline","datePublished","dateModified","async","crossOrigin","getFormatNumber","num","rawDate","raw","Date","year","getUTCFullYear","month","getMonth","date","getDate","hour","getHours","minute","getMinutes","HomePage","Head","SEO"],"sourceRoot":""}